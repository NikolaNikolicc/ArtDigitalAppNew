{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SessionService {\n  saveUser(o) {\n    throw new Error('Method not implemented.');\n  }\n  getSessionID() {\n    return this.http.post(`${this.server}/database/insert`, null);\n  }\n  constructor(http) {\n    this.http = http;\n    this.server = \"http://localhost:8080\";\n  }\n  static #_ = this.ɵfac = function SessionService_Factory(t) {\n    return new (t || SessionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SessionService,\n    factory: SessionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["SessionService","saveUser","o","Error","getSessionID","http","post","server","constructor","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\Projects\\Web2\\ArtDigitalAppNew\\frontend\\src\\app\\services\\session.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Order } from '../models/order';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService {\n  saveUser(o: Order) {\n    throw new Error('Method not implemented.');\n  }\n  \n  getSessionID() {\n    return this.http.post<number>(`${this.server}/database/insert`, null);\n  }\n\n  private server = \"http://localhost:8080\"\n\n  constructor(private http: HttpClient){\n\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,cAAc;EACzBC,QAAQA,CAACC,CAAQ;IACf,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAAS,GAAG,IAAI,CAACC,MAAM,kBAAkB,EAAE,IAAI,CAAC;EACvE;EAIAC,YAAoBH,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAE,MAAM,GAAG,uBAAuB;EAIxC;EAAC,QAAAE,CAAA,G;qBAbUT,cAAc,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdd,cAAc;IAAAe,OAAA,EAAdf,cAAc,CAAAgB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}