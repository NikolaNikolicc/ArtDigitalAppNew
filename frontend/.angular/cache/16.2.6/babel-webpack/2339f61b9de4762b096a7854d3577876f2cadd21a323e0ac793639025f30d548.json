{"ast":null,"code":"import { FormData } from '../models/FormData';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UploadService {\n  constructor(http) {\n    this.http = http;\n    this.server = \"http://localhost:8080\";\n  }\n  // define function to upload Files\n  upload(imageBlobs, imageNames) {\n    const fd = new FormData();\n    fd.blobList = imageBlobs;\n    fd.nameList = imageNames;\n    return this.http.post(`${this.server}/file/upload`, fd, {\n      reportProgress: true,\n      observe: \"events\"\n    });\n  }\n  static #_ = this.ɵfac = function UploadService_Factory(t) {\n    return new (t || UploadService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UploadService,\n    factory: UploadService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["FormData","UploadService","constructor","http","server","upload","imageBlobs","imageNames","fd","blobList","nameList","post","reportProgress","observe","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\Projects\\Web2\\ArtDigitalApp\\frontend\\frontend\\src\\app\\services\\upload.service.ts"],"sourcesContent":["import { HttpClient, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FormData } from '../models/FormData';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  private server = \"http://localhost:8080\"\n\n  constructor(private http: HttpClient) { }\n\n  // define function to upload Files\n  upload(imageBlobs: Blob[], imageNames: string[]): Observable<HttpEvent<String>>{\n    const fd = new FormData();\n    fd.blobList = imageBlobs;\n    fd.nameList = imageNames;\n    return this.http.post<String>(`${this.server}/file/upload`, fd, {\n      reportProgress: true,\n      observe: \"events\"\n    });\n  }\n\n  // define function to download files\n\n}\n"],"mappings":"AAGA,SAASA,QAAQ,QAAQ,oBAAoB;;;AAK7C,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB;EAEA;EAExC;EACAC,MAAMA,CAACC,UAAkB,EAAEC,UAAoB;IAC7C,MAAMC,EAAE,GAAG,IAAIR,QAAQ,EAAE;IACzBQ,EAAE,CAACC,QAAQ,GAAGH,UAAU;IACxBE,EAAE,CAACE,QAAQ,GAAGH,UAAU;IACxB,OAAO,IAAI,CAACJ,IAAI,CAACQ,IAAI,CAAS,GAAG,IAAI,CAACP,MAAM,cAAc,EAAEI,EAAE,EAAE;MAC9DI,cAAc,EAAE,IAAI;MACpBC,OAAO,EAAE;KACV,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAfUb,aAAa,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAblB,aAAa;IAAAmB,OAAA,EAAbnB,aAAa,CAAAoB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}